openapi: 3.0.3
info:
  title: VALR Technical Assessment
  description: VALR Technical Assessment
  version: 1.0.0
servers:
  - url: https://localhost
    description: VALRTechnicalAssessment
paths:
  /echoTest:
    get:
      tags:
        - echoTest
      summary: echoTest
      description: echoTest
      operationId: echoTest
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientFriendlyException'

  /orderbook/{currencyPair}:
    get:
      tags:
        - orderbook
      summary: get Orderbook for currency pair
      description: get Orderbook for currency pair
      operationId: getOrderbook
      parameters:
        - in: path
          name: currencyPair
          schema:
            type: string
          required: true
          description: Currency Pair
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getOrderBookResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientFriendlyException'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/clientFriendlyException'

components:
  schemas:
    getOrderBookResponse:
      type: object
      properties:
        AsksList:
          type: array
          items:
            $ref: '#/components/schemas/Orders'
        LastChange:
          type: string
          format: date-time
          example: "2025-02-12T11:16:12.064Z"
        SequenceNumber:
          type: integer
          format: int64
          example: 6916055818
    Orders:
      type: object
      properties:
        side:
          type: string
          enum: [ "sell", "buy" ]
          example: "sell"
        quantity:
          type: string
          description: "Quantity of the asset being traded"
          example: "0.00006"
        price:
          type: string
          description: "Price at which the order is placed"
          example: "1809439"
        currencyPair:
          type: string
          example: "BTCZAR"
        orderCount:
          type: integer
          description: "Number of orders at this price level"
          example: 1


    clientFriendlyException:
      type: object
      properties:
        reason:
          type: string